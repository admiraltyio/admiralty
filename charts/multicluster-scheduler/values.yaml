nameOverride: ""
fullnameOverride: ""

clusterName: ""
targetSelf: false
targets: []
#  - name: ""
#    serviceAccountImportName: "" # alternatively, you can import and automount remote service accounts with multicluster-service-account
#    namespaced: false
#  - name: ""
#    secretName: "" # name of a Secret in the same namespace containing a kubeconfig to connect to a remote Kubernetes API server
#    key: "" # (default: config) Key of the Secret data field containing the kubeconfig
#    context: "" # (default: the kubeconfig's current context) If the kubeconfig contains multiple contexts, you may want to specify which one to use.
#    namespaced: false

#imagePullSecretName: ""

controllerManager:
  image:
    repository: "quay.io/admiralty/multicluster-scheduler-agent"
    tag: "" # (default: .Chart.AppVersion)
    pullPolicy: IfNotPresent
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  affinity: {}
  tolerations: []

scheduler:
  image:
    repository: "quay.io/admiralty/multicluster-scheduler-scheduler"
    tag: "" # (default: .Chart.AppVersion)
    pullPolicy: IfNotPresent
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  affinity: {}
  tolerations: []

postDeleteJob:
  image:
    repository: "quay.io/admiralty/multicluster-scheduler-remove-finalizers"
    tag: "" # (default: .Chart.AppVersion)
    pullPolicy: IfNotPresent
  nodeSelector: {}
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  affinity: {}
  tolerations: []

debug:
  controllerManager: false
  proxyScheduler: false
  candidateScheduler: false

webhook:
  port: 9443
  certDir: /tmp/k8s-webhook-server/serving-certs
