{{- if not .Values.debug.controllerManager }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}-controller-manager
  labels: {{ include "labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{ include "selectorLabels" . | nindent 6 }}
      component: controller-manager
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cm.yaml") . | sha256sum }}
        multicluster.admiralty.io/service-account-import.name: "{{ range $i, $r := .Values.targets }}{{ if $r.serviceAccountImportName }}{{ if gt $i 0 }},{{ end }}{{ $r.serviceAccountImportName }}{{ end }}{{ end }}"
      labels: {{ include "labels" . | nindent 8 }}
        component: controller-manager
    spec:
      containers:
        - name: controller-manager
          image: {{ .Values.controllerManager.image.repository }}:{{ default .Chart.AppVersion .Values.controllerManager.image.tag }}
          ports:
              - containerPort: 9443
          volumeMounts:
            - name: config
              mountPath: /etc/admiralty
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
                {{- range .Values.targets }}
                {{- if not .serviceAccountImportName }}
            - name: {{ .secretName | default .name }}
              mountPath: /var/run/secrets/admiralty.io/serviceaccountimports/{{ .secretName | default .name }}
              readOnly: true
                {{- end }}
                {{- end }}
          imagePullPolicy: {{ .Values.controllerManager.image.pullPolicy }}
            {{- with .Values.controllerManager.resources }}
          resources: {{ toYaml . | nindent 12 }}
            {{- end }}
      serviceAccountName: {{ include "fullname" . }}
      volumes:
        - name: config
          configMap:
            name: {{ include "fullname" . }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "fullname" . }}-cert
                          {{- range .Values.targets }}
                          {{- if not .serviceAccountImportName }}
        - name: {{ .secretName | default .name }}
        secret:
          secretName: {{ .secretName | default .name }}
          items:
            - key: {{ default "config" .key }}
              path: config
            {{- end }}
            {{- end }}
        {{- with .Values.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ . }}
          {{- end }}
          {{- with .Values.controllerManager.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.controllerManager.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.controllerManager.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.controllerManager.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
        {{- end }}
---
{{- end }}
  {{- if not .Values.debug.proxyScheduler }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}-proxy-scheduler
  labels: {{ include "labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{ include "selectorLabels" . | nindent 6 }}
      component: proxy-scheduler
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cm.yaml") . | sha256sum }}
        multicluster.admiralty.io/service-account-import.name: "{{ range $i, $r := .Values.targets }}{{ if $r.serviceAccountImportName }}{{ if gt $i 0 }},{{ end }}{{ $r.serviceAccountImportName }}{{ end }}{{ end }}"
      labels: {{ include "labels" . | nindent 8 }}
        component: proxy-scheduler
    spec:
      containers:
        - name: proxy-scheduler
          image: {{ .Values.scheduler.image.repository }}:{{ default .Chart.AppVersion .Values.scheduler.image.tag }}
          args: ["--config", "/etc/admiralty/proxy-scheduler-config"]
          volumeMounts:
            - name: config
              mountPath: /etc/admiralty
                {{- range .Values.targets }}
                {{- if not .serviceAccountImportName }}
            - name: {{ .secretName | default .name }}
              mountPath: /var/run/secrets/admiralty.io/serviceaccountimports/{{ .secretName | default .name }}
              readOnly: true
                {{- end }}
                {{- end }}
          imagePullPolicy: {{ .Values.scheduler.image.pullPolicy }}
            {{- with .Values.scheduler.resources }}
          resources: {{ toYaml . | nindent 12 }}
            {{- end }}
      serviceAccountName: {{ include "fullname" . }}
      volumes:
        - name: config
          configMap:
            name: {{ include "fullname" . }}
              {{- range .Values.targets }}
              {{- if not .serviceAccountImportName }}
        - name: {{ .secretName | default .name }}
          secret:
            secretName: {{ .secretName | default .name }}
            items:
              - key: {{ default "config" .key }}
                path: config
                  {{- end }}
                  {{- end }}
            {{- with .Values.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ . }}
          {{- end }}
          {{- with .Values.scheduler.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.scheduler.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.scheduler.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.scheduler.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
        {{- end }}
---
{{- end }}
  {{- if not .Values.debug.candidateScheduler }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}-candidate-scheduler
  labels: {{ include "labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{ include "selectorLabels" . | nindent 6 }}
      component: candidate-scheduler
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cm.yaml") . | sha256sum }}
      labels: {{ include "labels" . | nindent 8 }}
        component: candidate-scheduler
    spec:
      containers:
        - name: candidate-scheduler
          image: {{ .Values.scheduler.image.repository }}:{{ default .Chart.AppVersion .Values.scheduler.image.tag }}
          args: ["--config", "/etc/admiralty/candidate-scheduler-config"]
          volumeMounts:
            - name: config
              mountPath: /etc/admiralty
          imagePullPolicy: {{ .Values.scheduler.image.pullPolicy }}
            {{- with .Values.scheduler.resources }}
          resources: {{ toYaml . | nindent 12 }}
            {{- end }}
      serviceAccountName: {{ include "fullname" . }}
      volumes:
        - name: config
          configMap:
            name: {{ include "fullname" . }}
            {{- with .Values.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ . }}
          {{- end }}
          {{- with .Values.scheduler.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.scheduler.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.scheduler.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.scheduler.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}